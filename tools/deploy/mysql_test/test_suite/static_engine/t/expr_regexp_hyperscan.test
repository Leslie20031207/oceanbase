# owner: bin.lb
# owner group: sql2

--disable_abort_on_error
--result_format 4

connect (syscon, $OBMYSQL_MS0,admin,$OBMYSQL_PWD,test,$OBMYSQL_PORT);
connection syscon;
sleep 2;


--disable_warnings
drop table if exists t1;
create table t1(c1 blob);
insert into t1 values('OceanBase');
sleep 2;
--enable_warnings


# hyperscan
ALTER SYSTEM SET regexp_engine = 'Hyperscan';
sleep 10;
# # Cases in which ICU and hyperscan perform consistently
# ## Zero parameters
SELECT REGEXP;
# ## One parameter
SELECT 'OceanBase' REGEXP;
SELECT REGEXP 'OceanBase';
# ## Two parameters
# ### Default case insensitive (depending on the current collation)
SELECT 'OceanBase' REGEXP 'a';
SELECT 'OceanBase' REGEXP '[a-n]+';
SELECT 'OceanBase' REGEXP 'o';
SELECT 'OceanBase' RLIKE 'a';
SELECT 'OceanBase' RLIKE '[a-n]+';
SELECT 'OceanBase' RLIKE 'o';
# ### 'n' contains newlines
SELECT 'Ocean\nBase' REGEXP '.';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '.';
SELECT '\n\r' REGEXP '.';
# ###  unix lines
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '^u';
# ### Multiple matching problem
SELECT 'OceanBase' REGEXP '[a-zA-Z]{2}';
# ### empty pattern
SELECT 'OceanBase' REGEXP '';
# ### blob type
SELECT c1 REGEXP 'a' from t1;

# # Inconsistencies between ICU and hyperscan
# ## embedded anchors: Hyperscan does not support characters before ^ and after $
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '$u';
# ## hyperscan is not support too large NFA
SELECT 'OceanBase' REGEXP '(ewh|m?uit|f|snmv.g.gx[yofl]|.[^g][hbd])((.h|((y|vypfw|dfg{4}|x+|o.|y{8,}))+|k{9}t|cgp...gsk+)){17,}';
# ## vacuous patterns
SELECT 'OceanBase' REGEXP 'a?';
# ##illegal bounds
SELECT 'OceanBase' REGEXP 'a{0}';
# ## nothing to repeat
SELECT 'OceanBase' REGEXP 'a++';
# ## repeating boundaries is not allowed (UE-1007)
SELECT 'OceanBase' REGEXP '^?a';
# ## zero width asserts ("lookarounds")
SELECT 'OceanBase' REGEXP '(?=b)';
# ## atomic groups
SELECT 'OceanBase' REGEXP 'c(?>.{1,})n';
# ## possessive quantifiers
SELECT 'OceanBase' REGEXP '(ase|xyz){1,2}+';
# ## back-reference inside a repeat (also too big REGEXP actually)
SELECT 'OceanBase' REGEXP '^..\x02.{10,522}([^\00])\1{16}';
# ## unhandled subroutines and backrefs
SELECT 'OceanBase' REGEXP 'foo\\g''bar';
# ## truly enormous and with complicated assert resolution (UE-1107)
SELECT 'OceanBase' REGEXP '((c(p|p)h{2,}bh.|p|((((cq|j|c|(\\b)|.[^nbgn]|(\\B)[qfh]a)){10,12}|ih|a|mnde[pa].|.g)){5,8})){21,29}';
# ## bogus \g backrefs
SELECT 'OceanBase' REGEXP 'a\\g';
# ## malformed \g backrefs (see UE-950)
SELECT 'OceanBase' REGEXP '^(O)\\g';
# ## Non-greedy matching
SELECT 'abcabc' REGEXP 'a.+?c';
# ## The matching intervals of multiple groups of rules intersect
SELECT 'aabbbbb' REGEXP '^[ab]{1,3}(ab*|b)';
# ## A rule is matched multiple times and the matching Spaces intersect
SELECT 'abcdef' REGEXP '[^a]{2,3}';
# ## {n, m}
SELECT 'XBBB' REGEXP 'a{,3}B';
# ## (?)
SELECT 'ab' REGEXP 'a(?)b';
# ## timeout
SELECT 'abd' REGEXP '(|ab)*?d';
# ## Anonymous capture (non-capture grouping)
SELECT '< >' REGEXP '<(?x:[a b])>';
# ## named capture
SELECT 'bon-bon' REGEXP '(?<A>bon)-\g{A}';
# ## [] grammar problem
SELECT 'p' REGEXP '[abc[:x\]pq]';
# ## Different interpretations of \0
SELECT 'abc' REGEXP 'a\0yz';
# ## Some patterns are not supported by the ICU
SELECT 'a:axyz' REGEXP '(?\'abc\'\w+):\g{abc}{2}';
# ## '^' and '$'
SELECT 'Ocean\nBase' REGEXP '^';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '^';
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '^';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '$';
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '$';
# ## '.'
SELECT 'Ocean\nBase\rAntGroup' REGEXP '.';
SELECT '\r' REGEXP '.';
# ## Newline: Hyperscan unix_lines By default, this parameter is not supported
SELECT 'A\nB\rC\r\nD\n\rE\036F\025G' REGEXP '^e';


# ICU
ALTER SYSTEM SET regexp_engine = 'ICU';
sleep 10;
# # Cases in which ICU and hyperscan perform consistently
# ## Zero parameters
SELECT REGEXP;
# ## One parameter
SELECT 'OceanBase' REGEXP;
SELECT REGEXP 'OceanBase';
# ## Two parameters
# ### Default case insensitive (depending on the current collation)
SELECT 'OceanBase' REGEXP 'a';
SELECT 'OceanBase' REGEXP '[a-n]+';
SELECT 'OceanBase' REGEXP 'o';
SELECT 'OceanBase' RLIKE 'a';
SELECT 'OceanBase' RLIKE '[a-n]+';
SELECT 'OceanBase' RLIKE 'o';
# ### 'n' contains newlines
SELECT 'Ocean\nBase' REGEXP '.';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '.';
SELECT '\n\r' REGEXP '.';
# ###  unix lines
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '^u';
# ### Multiple matching problem
SELECT 'OceanBase' REGEXP '[a-zA-Z]{2}';
# ### empty pattern
SELECT 'OceanBase' REGEXP '';
# ### blob type
SELECT c1 REGEXP 'a' from t1;

# # Inconsistencies between ICU and hyperscan
# ## embedded anchors: Hyperscan does not support characters before ^ and after $
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '$u';
# ## hyperscan is not support too large NFA
SELECT 'OceanBase' REGEXP '(ewh|m?uit|f|snmv.g.gx[yofl]|.[^g][hbd])((.h|((y|vypfw|dfg{4}|x+|o.|y{8,}))+|k{9}t|cgp...gsk+)){17,}';
# ## vacuous patterns
SELECT 'OceanBase' REGEXP 'a?';
# ##illegal bounds
SELECT 'OceanBase' REGEXP 'a{0}';
# ## nothing to repeat
SELECT 'OceanBase' REGEXP 'a++';
# ## repeating boundaries is not allowed (UE-1007)
SELECT 'OceanBase' REGEXP '^?a';
# ## zero width asserts ("lookarounds")
SELECT 'OceanBase' REGEXP '(?=b)';
# ## atomic groups
SELECT 'OceanBase' REGEXP 'c(?>.{1,})n';
# ## possessive quantifiers
SELECT 'OceanBase' REGEXP '(ase|xyz){1,2}+';
# ## back-reference inside a repeat (also too big REGEXP actually)
SELECT 'OceanBase' REGEXP '^..\x02.{10,522}([^\00])\1{16}';
# ## unhandled subroutines and backrefs
SELECT 'OceanBase' REGEXP 'foo\\g''bar';
# ## truly enormous and with complicated assert resolution (UE-1107)
SELECT 'OceanBase' REGEXP '((c(p|p)h{2,}bh.|p|((((cq|j|c|(\\b)|.[^nbgn]|(\\B)[qfh]a)){10,12}|ih|a|mnde[pa].|.g)){5,8})){21,29}';
# ## bogus \g backrefs
SELECT 'OceanBase' REGEXP 'a\\g';
# ## malformed \g backrefs (see UE-950)
SELECT 'OceanBase' REGEXP '^(O)\\g';
# ## Non-greedy matching
SELECT 'abcabc' REGEXP 'a.+?c';
# ## The matching intervals of multiple groups of rules intersect
SELECT 'aabbbbb' REGEXP '^[ab]{1,3}(ab*|b)';
# ## A rule is matched multiple times and the matching Spaces intersect
SELECT 'abcdef' REGEXP '[^a]{2,3}';
# ## {n, m}
SELECT 'XBBB' REGEXP 'a{,3}B';
# ## (?)
SELECT 'ab' REGEXP 'a(?)b';
# ## timeout
SELECT 'abd' REGEXP '(|ab)*?d';
# ## Anonymous capture (non-capture grouping)
SELECT '< >' REGEXP '<(?x:[a b])>';
# ## named capture
SELECT 'bon-bon' REGEXP '(?<A>bon)-\g{A}';
# ## [] grammar problem
SELECT 'p' REGEXP '[abc[:x\]pq]';
# ## Different interpretations of \0
SELECT 'abc' REGEXP 'a\0yz';
# ## Some patterns are not supported by the ICU
SELECT 'a:axyz' REGEXP '(?\'abc\'\w+):\g{abc}{2}';
# ## '^' and '$'
SELECT 'Ocean\nBase' REGEXP '^';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '^';
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '^';
SELECT 'Ocean\nBase\rAntGroup' REGEXP '$';
SELECT 'Ocean\nBase\rAnt\r\nGroup' REGEXP '$';
# ## '.'
SELECT 'Ocean\nBase\rAntGroup' REGEXP '.';
SELECT '\r' REGEXP '.';
# ## Newline: Hyperscan unix_lines By default, this parameter is not supported
SELECT 'A\nB\rC\r\nD\n\rE\036F\025G' REGEXP '^e';


connection syscon;
--sleep 2
