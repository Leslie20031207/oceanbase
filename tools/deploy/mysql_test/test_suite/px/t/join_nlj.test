#owner: dachuan.sdc
#owner group: SQL3
# tags: optimizer

--source mysql_test/test_suite/px/include/exam_data.inc

## bc2host
explain select /*+ USE_PX parallel(2) */ * from stu, score where stu.sid != score.sid and stu.sid < 12;
--sorted_result
select /*+ USE_PX parallel(2) */ * from stu, score where stu.sid != score.sid and stu.sid < 12;

# subject 上指定一个选择率，走 NLJ
explain select /*+ USE_PX parallel(2) */ * from score, teacher where teacher.subject = score.subject and teacher.tid = 1;
--sorted_result
select /*+ USE_PX parallel(2) */ * from score, teacher where teacher.subject = score.subject and teacher.tid = 1;

CREATE TABLE product (pid bigint primary key,pname varchar(50),gmt_modify timestamp(6),gmt_create timestamp(6),thread_id bigint, key k (gmt_modify))duplicate_scope="cluster";

CREATE TABLE orders (oid bigint primary key,pid bigint,amount int, addr varchar(20),key k (pid) local) partition by hash (oid) partitions 100;

insert into product values(314265, "abcd", now(), now(), 1234);
insert into orders values(314265, 314265, 678, "192.168.1.8");

insert into product values(314266, "abcd", now(), now(), 1234);
insert into orders values(314266, 314266, 678, "192.168.1.8");

insert into product values(314267, "abcd", now(), now(), 1234);
insert into orders values(314267, 314267, 678, "192.168.1.8");

insert into product values(314268, "abcd", now(), now(), 1234);
insert into orders values(314268, 314268, 678, "192.168.1.8");

#explain select t1.pname,t2.oid,t2.amount from product t1,orders t2 where t2.oid = 314265 and t1.pid=t2.pid;
select t1.pname,t2.oid,t2.amount from product t1,orders t2 where t2.oid = 314265 and t1.pid=t2.pid;

# 右表为das时, 左侧使用random shuffle来负载均衡, 但dop为1时不使用此规则
--disable_warnings
drop table if exists rf_t1, rf_t2, rf_t3, rf_t4;
CREATE TABLE rf_t1 (c1 INT, c2 INT);
CREATE TABLE rf_t2 (c1 INT PRIMARY KEY, c2 INT) PARTITION BY hash(c1) PARTITIONS 3;
CREATE TABLE rf_t3 (c1 INT PRIMARY KEY, c2 INT);
CREATE TABLE rf_t4 (c1 INT PRIMARY KEY, c2 INT);
--enable_warnings

insert into rf_t1 values(1, 1),(2, 2),(3, 3),(4, 4),(5, 5);
insert into rf_t2 values(1, 1),(2, 2),(3, 3),(4, 4),(5, 5);
insert into rf_t3 values(1, 1),(2, 2),(3, 3),(4, 4),(5, 5);
insert into rf_t4 values(1, 1),(2, 2),(3, 3),(4, 4),(5, 5);

explain select /*+pq_distribute(rf_t2 NONE, ALL), parallel(2), leading(rf_t1), use_nl(rf_t1, rf_t2) */ * from rf_t1 join rf_t2 on rf_t1.c1 = rf_t2.c1;
explain select * from rf_t1 join 
(
  select /*+parallel(10), leading(rf_t1), pq_distribute(rf_t2 NONE, ALL), use_nl(rf_t1, rf_t2, rf_t3, rf_t4) */ rf_t4.c1 cc 
  from rf_t2 join rf_t4 on rf_t4.c1 = rf_t2.c1
) 
on rf_t1.c1 = cc;

--sorted_result
select /*+pq_distribute(rf_t2 NONE, ALL), parallel(2), leading(rf_t1), use_nl(rf_t1, rf_t2) */ * from rf_t1 join rf_t2 on rf_t1.c1 = rf_t2.c1;
--sorted_result
select * from rf_t1 join
(
  select /*+parallel(10), leading(rf_t1), pq_distribute(rf_t2 NONE, ALL), use_nl(rf_t1, rf_t2, rf_t3, rf_t4) */ rf_t4.c1 cc 
  from rf_t2 join rf_t4 on rf_t4.c1 = rf_t2.c1
) 
on rf_t1.c1 = cc;

drop table if exists rf_t1, rf_t2, rf_t3, rf_t4;
