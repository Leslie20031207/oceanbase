--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
# owner: jim.wzh
# owner group: SQL
# description: the return value of function from_base64() coercibility of all kinds of levels parameters


#############
# test for different parameter coercibility
select coercibility(from_base64(1));
select coercibility(from_base64('1'));
select coercibility(from_base64('SGVsbG8sIHdvcmxkIQ=='));
select coercibility(from_base64(_utf8mb4'A' COLLATE utf8mb4_bin));
select coercibility(from_base64(CONCAT(1, 'abc')));
select coercibility(from_base64(CONCAT(CONVERT('Hello', BINARY), CONVERT(' 世界' USING latin1))));
select coercibility(from_base64(null));

SELECT COERCIBILITY(DAYNAME(1));
SELECT COERCIBILITY(DAYNAME('2024-07-07'));
SELECT COERCIBILITY(DAYNAME(_utf8mb4'A' COLLATE utf8mb4_bin));
SELECT COERCIBILITY(DAYNAME(CONCAT(1, 'abc')));
SELECT COERCIBILITY(DAYNAME(CONCAT(CONVERT('Hello', BINARY), CONVERT(' 世界' USING latin1))));
SELECT COERCIBILITY(DAYNAME(NULL));

# regexp_like test 
--disable_warnings
DROP TABLE IF EXISTS table_3;
--enable_warnings
CREATE TABLE table_3 (
    c1 SET('a') character set utf8mb4 collate utf8mb4_general_ci
);
INSERT INTO table_3 VALUES ('a');
SELECT COERCIBILITY(REGEXP_LIKE(c1, 'a')) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE(c1, _utf8mb4'A' COLLATE utf8mb4_bin)) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE(c1, CONCAT(1, 'abc'))) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE('a', 'a')) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE(c1, null)) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE(null, 'a')) FROM table_3;
SELECT COERCIBILITY(REGEXP_LIKE(null, null)) FROM table_3;


###########
# test for add/sub time
set collation_connection=utf8mb4_general_ci;
drop table if exists utf8_table_2;
create table utf8_table_2(c1 TEXT character set utf8mb4 collate utf8mb4_unicode_ci,
                        c2 TEXT character set utf8mb4 collate utf8mb4_general_ci,
                        c3 TEXT character set utf8mb4 collate utf8mb4_0900_ai_ci,
                        c4 TEXT character set utf8mb4 collate utf8mb4_bin);
insert into utf8_table_2 value ('a','b','c','d');
SELECT COLLATION(ADDTIME(c1, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(ADDTIME(c2, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(ADDTIME(c3, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(ADDTIME(c4, '2:0:0')) FROM utf8_table_2;

SELECT COLLATION(SUBTIME(c1, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(SUBTIME(c2, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(SUBTIME(c3, '2:0:0')) FROM utf8_table_2;
SELECT COLLATION(SUBTIME(c4, '2:0:0')) FROM utf8_table_2;




--disable_warnings
drop table if exists test;
--enable_warnings
# test for different data types
CREATE TABLE test (
    id INT AUTO_INCREMENT PRIMARY KEY,
    char_col CHAR(10),
    varchar_col VARCHAR(255),
    text_col TEXT,
    blob_col BLOB,
    tinytext_col TINYTEXT,
    mediumtext_col MEDIUMTEXT,
    longtext_col LONGTEXT,
    int_col INT,
    float_col FLOAT,
    double_col DOUBLE,
    decimal_col DECIMAL(10, 2),
    date_col DATE,
    datetime_col DATETIME,
    timestamp_col TIMESTAMP,
    time_col TIME,
    year_col YEAR,
    enum_col ENUM('Option1', 'Option2'),
    set_col SET('A', 'B', 'C'),
    boolean_col BOOLEAN
);

INSERT INTO test (
    char_col, varchar_col, text_col, blob_col, tinytext_col, mediumtext_col, longtext_col,
    int_col, float_col, double_col, decimal_col, date_col, datetime_col, timestamp_col,
    time_col, year_col, enum_col, set_col, boolean_col
) VALUES
('abcdefghij', 'Test VARCHAR', 'Test TEXT', 'Test BLOB', 'Test TINYTEXT', 'Test MEDIUMTEXT', 'Test LONGTEXT',
 123, 123.45, 678.90, 5432.10, '2023-10-01', '2023-10-01 10:00:00', CURRENT_TIMESTAMP,
 '10:00:00', 2023, 'Option1', 'A,B', TRUE);

select coercibility(from_base64(id)) from test;
select coercibility(from_base64(char_col)) from test;
select coercibility(from_base64(varchar_col)) from test;
select coercibility(from_base64(text_col)) from test;
select coercibility(from_base64(blob_col)) from test;
select coercibility(from_base64(tinytext_col)) from test;
select coercibility(from_base64(mediumtext_col)) from test;
select coercibility(from_base64(longtext_col)) from test;
select coercibility(from_base64(int_col)) from test;
select coercibility(from_base64(float_col)) from test;
select coercibility(from_base64(double_col)) from test;
select coercibility(from_base64(decimal_col)) from test;
select coercibility(from_base64(date_col)) from test;
select coercibility(from_base64(datetime_col)) from test;
select coercibility(from_base64(time_col)) from test;
select coercibility(from_base64(year_col)) from test;
select coercibility(from_base64(enum_col)) from test;
select coercibility(from_base64(set_col)) from test;
select coercibility(from_base64(boolean_col)) from test;
# test for dayname coercibility
SELECT COERCIBILITY(DAYNAME(id)) FROM test;
SELECT COERCIBILITY(DAYNAME(char_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(varchar_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(text_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(blob_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(tinytext_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(mediumtext_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(longtext_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(int_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(float_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(double_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(decimal_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(date_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(datetime_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(time_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(year_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(enum_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(set_col)) FROM test;
SELECT COERCIBILITY(DAYNAME(boolean_col)) FROM test;

# test date_sub
--disable_warnings
drop table if exists test;
--enable_warnings
CREATE TABLE test (
    id INT AUTO_INCREMENT PRIMARY KEY,
    char_col CHAR(10),
    varchar_col VARCHAR(255),
    text_col TEXT,
    blob_col BLOB,
    tinytext_col TINYTEXT,
    mediumtext_col MEDIUMTEXT,
    longtext_col LONGTEXT,
    int_col INT,
    float_col FLOAT,
    double_col DOUBLE,
    decimal_col DECIMAL(10, 2),
    date_col DATE,
    datetime_col DATETIME,
    timestamp_col TIMESTAMP,
    time_col TIME,
    year_col YEAR,
    enum_col ENUM('Option1', 'Option2'),
    set_col SET('A', 'B', 'C'),
    boolean_col BOOLEAN
);

INSERT INTO test (
    char_col, varchar_col, text_col, blob_col, tinytext_col, mediumtext_col, longtext_col,
    int_col, float_col, double_col, decimal_col, date_col, datetime_col, timestamp_col,
    time_col, year_col, enum_col, set_col, boolean_col
) VALUES
('abcdefghij', 'Test VARCHAR', 'Test TEXT', 'Test BLOB', 'Test TINYTEXT', 'Test MEDIUMTEXT', 'Test LONGTEXT',
 123, 123.45, 678.90, 5432.10, '2023-10-01', '2023-10-01 10:00:00', CURRENT_TIMESTAMP,
 '10:00:00', 2023, 'Option1', 'A,B', TRUE);
SELECT COERCIBILITY(DATE_SUB(id, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(char_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(varchar_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(text_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(blob_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(tinytext_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(mediumtext_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(longtext_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(int_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(float_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(double_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(decimal_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(date_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(datetime_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(time_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(year_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(enum_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(set_col, INTERVAL 1 WEEK)) FROM test;
SELECT COERCIBILITY(DATE_SUB(boolean_col, INTERVAL 1 WEEK)) FROM test;

# nullif test
--disable_warnings
drop table if exists non_bin_coll_2;
--enable_warnings
create table non_bin_coll_2(c TEXT character set utf8mb4 collate utf8mb4_general_ci,
                c0 TEXT character set binary,
                c1 TEXT character set utf8mb4 collate utf8mb4_general_ci,
                c2 TEXT character set ascii collate ascii_general_ci,
                c3 TEXT character set gbk collate gbk_chinese_ci,
                c4 TEXT character set gb18030 collate gb18030_chinese_ci,
                c5 TEXT character set latin1 collate latin1_swedish_ci,
                c6 TEXT character set tis620 collate tis620_thai_ci);
insert into non_bin_coll_2 values ('x','y','a','b','c','d','e','f');
SELECT COLLATION(NULLIF('pok', c0)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c1)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c2)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c3)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c4)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c5)) FROM non_bin_coll_2;
SELECT COLLATION(NULLIF('pok', c6)) FROM non_bin_coll_2;
